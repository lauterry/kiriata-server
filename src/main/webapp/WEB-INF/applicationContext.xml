<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- This will automatically locate any and all property files you have 
		within your classpath, provided they fall under the META-INF directory. The 
		located property files are parsed and their values can then be used within 
		application context files in the form of ${propertyKey}. -->
	<!-- <context:property-placeholder location="classpath*:*.properties" /> -->

    <!-- Bean d'acces au Contexte -->
    <bean id="applicationContextHolder"	class="fr.lau.kiriata.springrestlet.ApplicationContextHolder" />

    <bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:kiriata-server.properties"/>
    </bean>

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject">
			<bean
				class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="java.lang.System" />
				<property name="targetMethod" value="getProperties" />
			</bean>
		</property>
		<property name="targetMethod" value="putAll" />
		<property name="arguments">
			<!-- The new Properties -->
			<util:properties>
				<prop key="org.restlet.engine.loggerFacadeClass">org.restlet.ext.slf4j.Slf4jLoggerFacade</prop>
			</util:properties>
		</property>
	</bean>

	<!-- Activation de l'AOP -->
	<aop:aspectj-autoproxy />

	<!-- Activation du AutoWiring -->
	<context:annotation-config />

    <!--reads kiriata-client.properties file-->
    <bean id="placeholderConfig" class="fr.lau.kiriata.utils.SpringPropertyUtils">
        <property name="location" value="classpath:kiriata-server.properties">
        </property>
    </bean>

	<bean id="kiriataDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<bean id="mySessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="kiriataDataSource" />
		<!-- Packages Ã  scanner pour trouver les objets model -->
		<property name="packagesToScan">
			<value>fr.lau.kiriata.model</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="mySessionFactory" />
		</property>
	</bean>

	<bean id="proxyDAO" abstract="true">
		<property name="sessionFactory" ref="mySessionFactory" />
	</bean>

	<bean id="movieDao" class="fr.lau.kiriata.dao.MovieDaoImpl" parent="proxyDAO" scope="prototype" />

    <!-- our SpringComponent which binds us to the Restlet servlet configured above -->
    <bean id="springRestletComponent" class="org.restlet.ext.spring.SpringComponent">
        <!-- the defaultTarget for this component is our Restlet Application -->
        <property name="clientsList">
            <list>
                <value>http</value>
                <value>https</value>
                <value>file</value>
                <value>clap</value>
                <value>riap</value>
            </list>
        </property>
        <property name="defaultTarget" ref="restletApplication" />
    </bean>

    <bean id="restletApplication" class="fr.lau.kiriata.KiriataApplication"/>

    <bean id="dogsRestResource" class="fr.lau.kiriata.resource.MovieResource" scope="prototype"/>

</beans>